name: CI Workflow for Bible Immersive App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-lint:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Add Testing Framework
      - name: Install Jest for Tests
        run: npm install jest --save-dev

      # Step 5: Add Linting Framework
      - name: Install ESLint for Linting
        run: npm install eslint --save-dev

      # Step 6: Create ESLint Config
      - name: Generate ESLint Config
        run: |
          echo '{
            "env": { "browser": true, "es2021": true },
            "extends": "eslint:recommended",
            "parserOptions": { "ecmaVersion": 12, "sourceType": "module" },
            "rules": {}
          }' > .eslintrc.json

      # Step 7: Create a Basic Test File
      - name: Create Jest Test File
        run: |
          mkdir -p tests
          echo "test('example test', () => { expect(1 + 1).toBe(2); });" > tests/app.test.js
 
      # Step 8: Lint
      - name: Run ESLint
        run: npx eslint ./src

      # Step 9: Run Tests
      - name: Run Tests
        run: npx jest
        env:
          NODE_ENV: test

      # Step 10: Build Project
      - name: Build Project
        run: npm run build

  performance:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Run Lighthouse Performance Test
      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v8
        with:
          configPath: ./lighthouse-config.js
          artifactName: lighthouse-results